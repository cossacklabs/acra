version: 0.91.0
# path to config
config_file: 

# Connection string to db
db_connection_string: 

# perform rotation without saving rotated AcraStructs and keys
dry-run: false

# dump config
dump_config: false

# Path to file with map of <ZoneId>: <FilePaths> in json format {"zone_id1": ["filepath1", "filepath2"], "zone_id2": ["filepath1", "filepath2"]}
file_map_config: 

# Generate with yaml config markdown text file with descriptions of all args
generate_markdown_args_table: false

# Folder from which the keys will be loaded
keys_dir: .acrakeys

# Handle MySQL connections
mysql_enable: false

# Handle Postgresql connections
postgresql_enable: false

# Number of Redis database for keys
redis_db_keys: 0

# <host>:<port> used to connect to Redis
redis_host_port: 

# Password to Redis database
redis_password: 

# Select query with ? as placeholders where last columns in result must be ClientId/ZoneId and AcraStruct. Other columns will be passed into insert/update query into placeholders
sql_select: 

# Insert/Update query with ? as placeholder where into first will be placed rotated AcraStruct
sql_update: 

# Connection string (http://x.x.x.x:yyyy) for loading ACRA_MASTER_KEY from HashiCorp Vault
vault_connection_api_string: 

# KV Secret Path (secret/) for reading ACRA_MASTER_KEY from HashiCorp Vault
vault_secrets_path: secret/

# Path to CA certificate for HashiCorp Vault certificate validation
vault_tls_ca_path: 

# Path to client TLS certificate for reading ACRA_MASTER_KEY from HashiCorp Vault
vault_tls_client_cert: 

# Path to private key of the client TLS certificate for reading ACRA_MASTER_KEY from HashiCorp Vault
vault_tls_client_key: 

# Use TLS to encrypt transport with HashiCorp Vault
vault_tls_transport_enable: false

# Rotate acrastructs as it was encrypted with zonemode or without. With zonemode_enable=true will be used zoneID for encryption/decryption. If false then key id will not be used
zonemode_enable: true

