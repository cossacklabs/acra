# Port of Acra HTTP API
acraserver_api_connection_port: 9090

# Connection string to Acra's API like tcp://x.x.x.x:yyyy or unix:///path/to/socket
acraserver_api_connection_string: 

# IP or domain to AcraServer daemon
acraserver_connection_host: 

# Port of AcraServer daemon
acraserver_connection_port: 9393

# Connection string to AcraServer like tcp://x.x.x.x:yyyy or unix:///path/to/socket
acraserver_connection_string: 

# Expected id from AcraServer for Secure Session
acraserver_securesession_id: acra_server

# Use tls to encrypt transport between AcraServer and AcraConnector/client
acraserver_tls_transport_enable: false

# Use raw transport (tcp/unix socket) between acraserver and acraproxy/client (don't use this flag if you not connect to database with ssl/tls
acraserver_transport_encryption_disable: false

# IP or domain to AcraTranslator daemon
acratranslator_connection_host: 0.0.0.0

# Port of AcraTranslator daemon
acratranslator_connection_port: 9696

# Connection string to AcraTranslator like grpc://0.0.0.0:9696 or http://0.0.0.0:9595
acratranslator_connection_string: 

# Expected id from AcraTranslator for Secure Session
acratranslator_securesession_id: acra_translator

# Client ID
client_id: 

# path to config
config_file: 

# Log everything to stderr
d: false

# dump config
dump_config: false

# Generate with yaml config markdown text file with descriptions of all args
generate_markdown_args_table: false

# Enable connection to AcraServer via HTTP API
http_api_enable: false

# Port for AcraConnector HTTP API
incoming_connection_api_port: 9191

# Connection string like tcp://x.x.x.x:yyyy or unix:///path/to/socket
incoming_connection_api_string: tcp://127.0.0.1:9191/

# Port to AcraConnector
incoming_connection_port: 9494

# URL which will be used to expose Prometheus metrics (use <URL>/metrics address to pull metrics)
incoming_connection_prometheus_metrics_string: 

# Connection string like tcp://x.x.x.x:yyyy or unix:///path/to/socket
incoming_connection_string: tcp://127.0.0.1:9494/

# Jaeger agent endpoint that will be used to export trace data
jaeger_agent_endpoint: 127.0.0.1:6831

# Password used for basic auth (optional) to jaeger
jaeger_basic_auth_password: 

# Username used for basic auth (optional) to jaeger
jaeger_basic_auth_username: 

# Jaeger endpoint that will be used to export trace data
jaeger_collector_endpoint: 127.0.0.1:14268

# Folder from which will be loaded keys
keys_dir: .acrakeys

# Logging format: plaintext, json or CEF
logging_format: plaintext

# Expected mode of connection. Possible values are: AcraServer or AcraTranslator. Corresponded connection host/port/string/session_id will be used.
mode: AcraServer

# Expected Server Name (SNI) from AcraServer
tls_acraserver_sni: 

# Set authentication mode that will be used in TLS connection with AcraServer/AcraTranslator. Values in range 0-4 that set auth type (https://golang.org/pkg/crypto/tls/#ClientAuthType). Default is tls.RequireAndVerifyClientCert
tls_auth: 4

# Path to root certificate which will be used with system root certificates to validate AcraServer's certificate
tls_ca: 

# Path to certificate
tls_cert: 

# Path to private key that will be used in TLS handshake with AcraServer
tls_key: 

# Export trace data to jaeger
tracing_jaeger_enable: false

# Export trace data to log
tracing_log_enable: false

# Disable checking that connections from app running from another user
user_check_disable: false

# Log to stderr all INFO, WARNING and ERROR logs
v: false

