# Path to basic auth passwords. To add user, use: `./acra-authmanager --set --user <user> --pwd <pwd>`
auth_keys: configs/auth.keys

# Path to AcraCensor configuration file
censor_config: 

# Expected client id of AcraConnector in mode without encryption
client_id: 

# Time that AcraServer will wait (in seconds) on restart before closing all connections
close_connections_timeout: 10

# Port for AcraServer for HTTP API
commands_port: 9090

# path to config
config: 

# Connection string for api like tcp://x.x.x.x:yyyy or unix:///path/to/socket
connection_api_string: tcp://0.0.0.0:9090/

# Connection string like tcp://x.x.x.x:yyyy or unix:///path/to/socket
connection_string: tcp://0.0.0.0:9393/

# Turn on debug logging
d: false

# Host to db
db_host: 

# Port to db
db_port: 5432

# Turn on http debug server
ds: false

# dump config
dumpconfig: false

# Enable HTTP API
enable_http_api: false

# Escape format for Postgresql bytea data
escape_bytea: false

# Hex format for Postgresql bytea data (default)
hex_bytea: false

# Host for AcraServer
host: 0.0.0.0

# Acrastruct may be injected into any place of data cell
injectedcell: false

# Folder from which will be loaded keys
keys_dir: .acrakeys

# Logging format: plaintext, json or CEF
logging_format: plaintext

# Handle MySQL connections
mysql: false

# Use raw transport (tcp/unix socket) between AcraServer and AcraConnector/client (don't use this flag if you not connect to database with ssl/tls
no_encryption: false

# Execute script on detecting poison record
poisonscript: 

# Stop on detecting poison record
poisonshutdown: false

# Port for AcraServer
port: 9393

# Handle Postgresql connections (default true)
postgresql: false

# Id that will be sent in secure session
server_id: acra_server

# Use tls to encrypt transport between AcraServer and AcraConnector/client
tls: false

# Set authentication mode that will be used in TLS connection with Postgresql. Values in range 0-4 that set auth type (https://golang.org/pkg/crypto/tls/#ClientAuthType). Default is tls.RequireAndVerifyClientCert
tls_auth: 4

# Path to root certificate which will be used with system root certificates to validate Postgresql's and AcraConnector's certificate
tls_ca: 

# Path to tls certificate
tls_cert: 

# Path to private key that will be used in TLS handshake with AcraConnector as server's key and Postgresql as client's key
tls_key: 

# Expected Server Name (SNI) from Postgresql
tls_sni: 

# Log to stderr
v: false

# Acrastruct will stored in whole data cell
wholecell: true

# Turn on zone mode
zonemode: false

