version: 0.93.0
# Client ID
client_id: client

# path to config
config_file: 

# dump config
dump_config: false

# Create keypair for data encryption/decryption
generate_acrawriter_keys: false

# Create key for HMAC calculation
generate_hmac_key: false

# Create key for log integrity checks
generate_log_key: false

# Generate with yaml config markdown text file with descriptions of all args
generate_markdown_args_table: false

# Generate new random master key and save to file
generate_master_key: 

# Generate keypair and symmetric key for poison records
generate_poisonrecord_keys: false

# Generate symmetric key for data encryption/decryption with AcraBlock
generate_symmetric_storage_key: false

# Folder where will be saved keys
keys_output_dir: .acrakeys

# Folder where will be saved public key
keys_public_output_dir: .acrakeys

# set keystore format: v1 (current), v2 (new)
keystore: 

# Keystore encryptor strategy; : <master_key|kms_encrypted_master_key|vault_master_key|kms_per_client
keystore_encryption_type: master_key

# KMS credentials JSON file path
kms_credentials_path: 

# KMS usage key policy: <create>
kms_key_policy: create

# KMS type for using: <aws>
kms_type: 

# Number of Redis database for keys
redis_db_keys: 0

# <host>:<port> used to connect to Redis
redis_host_port: 

# Password to Redis database
redis_password: 

# Path to TLS certificate to use as client_id identifier
tls_cert: 

# Decide which field of TLS certificate to use as ClientID (distinguished_name|serial_number). Default is distinguished_name.
tls_identifier_extractor_type: distinguished_name

# Connection string (http://x.x.x.x:yyyy) for loading ACRA_MASTER_KEY from HashiCorp Vault
vault_connection_api_string: 

# KV Secret Path (secret/) for reading ACRA_MASTER_KEY from HashiCorp Vault
vault_secrets_path: secret/

# Path to CA certificate for HashiCorp Vault certificate validation
vault_tls_ca_path: 

# Path to client TLS certificate for reading ACRA_MASTER_KEY from HashiCorp Vault
vault_tls_client_cert: 

# Path to private key of the client TLS certificate for reading ACRA_MASTER_KEY from HashiCorp Vault
vault_tls_client_key: 

# Use TLS to encrypt transport with HashiCorp Vault
vault_tls_transport_enable: false

