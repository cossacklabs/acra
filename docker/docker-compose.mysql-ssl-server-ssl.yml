version: "3"

services:
    acra-keymaker_client:
        # You can specify docker image tag in the environment
        # variable ACRA_DOCKER_IMAGE_TAG or run by default with 'latest' images
        image: "cossacklabs/acra-keymaker:${ACRA_DOCKER_IMAGE_TAG:-latest}"
        # We do not need network for keys' generation at all
        network_mode: "none"
        environment:
            # INSECURE!!! You MUST define your own ACRA_SERVER_MASTER_KEY and ACRA_CONNECTOR_MASTER_KEY
            # The default is only for testing purposes
            ACRA_MASTER_KEY: ${ACRA_SERVER_MASTER_KEY:-N0MyZEVCRGY1cHA4ODRSVHp3c3BNeGtDekxaV3BhTHI=}
        volumes:
            # Mount the whole ./.acrakeys directory to be able generate keys and
            # place them in services' subdirectories
            - ./.acrakeys:/keys
            - ./ssl/acra-client:/ssl:ro
        command: >-
            --client_id=""
            --tls_cert=/ssl/acra-client.crt
            --generate_acrawriter_keys
            --keys_output_dir=/keys/acra-server
            --keys_public_output_dir=/keys/acra-server
            --keystore=v1

    # MySQL container
    mysql:
        # Build and run container based on official mysql image
        # with enabled SSL and included SSL certificates
        build:
            context: ../
            dockerfile: docker/mysql-ssl.dockerfile
        # INSECURE!!! You MUST define your own DB name and credentials
        environment:
            MYSQL_ONETIME_PASSWORD: ${MYSQL_ONETIME_PASSWORD:-urLK7YJPndDWsnJC}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-hy53uBLmBuihUK29}
            MYSQL_DATABASE: ${MYSQL_DATABASE:-test}
            MYSQL_USER: ${MYSQL_USER:-test}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD:-test}
        # Open the port outside for writer
        ports:
            - "3306:3306"

    acra-server:
        image: "cossacklabs/acra-server:${ACRA_DOCKER_IMAGE_TAG:-latest}"
        restart: on-failure
        depends_on:
            - acra-keymaker_client
            - mysql
        # Open the port outside for client application
        ports:
            - "9393:9393"
        environment:
            ACRA_MASTER_KEY: ${ACRA_SERVER_MASTER_KEY:-N0MyZEVCRGY1cHA4ODRSVHp3c3BNeGtDekxaV3BhTHI=}
        volumes:
            # Mount the directory with only the keys for this service
            - ./.acrakeys/acra-server:/keys:ro
            # Mount directories with SSL certificates
            - ./ssl/ca:/ssl.ca:ro
            - ./ssl/acra-server:/ssl.server:ro
        command: >-
            --mysql_enable
            --db_host=mysql
            --db_port=3306
            --keys_dir=/keys
            --tls_auth=4
            --tls_client_id_from_cert
            --tls_identifier_extractor_type=distinguished_name
            --tls_ca=/ssl.ca/example.cossacklabs.com.crt
            --tls_cert=/ssl.server/acra-server.crt
            --tls_key=/ssl.server/acra-server.key
            --tls_db_sni=mysql
            -v
