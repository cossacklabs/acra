schemas:
  # used in test.py
  - table: test_type_aware_decryption_with_defaults
    columns:
      - id
      - value_str
      - value_bytes
      - value_int32
      - value_int64
      - value_null_str
      - value_null_int32
      - value_empty_str

    encrypted:
      - column: value_str
        data_type: "str"
        response_on_fail: default_value
        default_data_value: "value_str"

      - column: value_bytes
        data_type: "bytes"
        response_on_fail: default_value
        default_data_value: "dmFsdWVfYnl0ZXM="

      - column: value_int32
        data_type: "int32"
        response_on_fail: default_value
        default_data_value: "32"

      - column: value_int64
        data_type: "int64"
        response_on_fail: default_value
        default_data_value: "64"

      - column: value_null_str
        data_type: "str"

      - column: value_null_int32
        data_type: "str"

      - column: value_empty_str
        data_type: "str"

  - table: test_type_aware_decryption_without_defaults
    columns:
      - id
      - value_str
      - value_bytes
      - value_int32
      - value_int64
      - value_null_str
      - value_null_int32
      - value_empty_str

    encrypted:
      - column: value_str
        data_type: "str"

      - column: value_bytes
        data_type: "bytes"

      - column: value_int32
        data_type: "int32"

      - column: value_int64
        data_type: "int64"

      - column: value_null_str
        data_type: "str"

      - column: value_null_int32
        data_type: "str"

      - column: value_empty_str
        data_type: "str"

  - table: test_type_aware_decryption_with_error
    columns:
      - id
      - value_str
      - value_bytes
      - value_int32
      - value_int64
      - value_null_str
      - value_null_int32
      - value_empty_str

    encrypted:
      - column: value_str
        data_type: "str"
        response_on_fail: error

      - column: value_bytes
        data_type: "bytes"
        response_on_fail: error

      - column: value_int32
        data_type: "int32"
        response_on_fail: error

      - column: value_int64
        data_type: "int64"
        response_on_fail: error

      - column: value_null_str
        data_type: "str"
        response_on_fail: error

      - column: value_null_int32
        data_type: "str"
        response_on_fail: error

      - column: value_empty_str
        data_type: "str"
        response_on_fail: error

  - table: test_type_aware_decryption_with_ciphertext
    columns:
      - id
      - value_str
      - value_bytes
      - value_int32
      - value_int64
      - value_null_str
      - value_null_int32
      - value_empty_str

    encrypted:
      - column: value_str
        data_type: "str"
        response_on_fail: ciphertext

      - column: value_bytes
        data_type: "bytes"
        response_on_fail: ciphertext

      - column: value_int32
        data_type: "int32"
        response_on_fail: ciphertext

      - column: value_int64
        data_type: "int64"
        response_on_fail: ciphertext

      - column: value_null_str
        data_type: "str"
        response_on_fail: ciphertext

      - column: value_null_int32
        data_type: "str"
        response_on_fail: ciphertext

      - column: value_empty_str
        data_type: "str"
        response_on_fail: ciphertext

  - table: test_proper_db_flushing_on_error
    columns:
      - id
      - value_bytes

    encrypted:
      # We want to test the proper workflow, so one field will do the trick
      - column: value_bytes
        data_type: "bytes"
        response_on_fail: error
