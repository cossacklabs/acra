version: 2
jobs:
  x86_64:
    docker:
      - image: cossacklabs/android-build
      # postgresql image with ssl support
      - image: nimbustech/postgres-ssl:9.5
        environment:
          POSTGRES_PASSWORD: test
          POSTGRES_USER: test
          POSTGRES_DB: test
      # use the same credentials for mysql db as for postgresql (which support was added first)
      # has latest tag on 2018.03.29
      - image: mysql:5.7.21
        environment:
          MYSQL_DATABASE: test
          MYSQL_USER: test
          MYSQL_PASSWORD: test
          MYSQL_ROOT_PASSWORD: root
    environment:
      GOTHEMIS_IMPORT: github.com/cossacklabs/themis/gothemis
      FILEPATH_ERROR_FLAG: /tmp/test_fail
      VERSIONS: 1.8 1.8.7 1.9.4 1.10 1.10.3
      TEST_DB_USER: test
      TEST_DB_USER_PASSWORD: test
      TEST_DB_NAME: test
      GOPATH_FOLDER: gopath
    steps:
    # prepare
      - run: sudo apt-get update && sudo DEBIAN_FRONTEND=noninteractive apt-get -y install libssl-dev python python-setuptools python3 python3-setuptools python3-pip git rsync psmisc
      - run: cd $HOME && git clone https://github.com/cossacklabs/themis && cd themis && sudo make install
      - run: cd $HOME && for version in $VERSIONS; do mkdir go_root_$version; cd go_root_$version; wget https://storage.googleapis.com/golang/go$version.linux-amd64.tar.gz; tar xf go$version.linux-amd64.tar.gz; cd -; done
      - run: mkdir $HOME/$GOPATH_FOLDER
      - checkout
      - run: cd $HOME && mkdir -p $HOME/$GOPATH_FOLDER/src/github.com/cossacklabs/themis; mkdir -p $HOME/$GOPATH_FOLDER/src/github.com/cossacklabs/acra; ln -s $HOME/themis/gothemis $HOME/$GOPATH_FOLDER/src/github.com/cossacklabs/themis/gothemis; cp -r $HOME/project/* $HOME/$GOPATH_FOLDER/src/github.com/cossacklabs/acra/
      - run: cd $HOME && GOPATH=$HOME/$GOPATH_FOLDER go get -d github.com/cossacklabs/acra/...
      - run: pip3 install -r $HOME/project/tests/requirements.txt
      # install from sources because pip install git+https://github.com/mysql/mysql-connector-python not support recursive submodules
      - run: git clone https://github.com/Lagovas/mysql-connector-python; cd mysql-connector-python; sudo python3 setup.py clean build_py install_lib
      - run: cd $HOME && GOPATH=$HOME/$GOPATH_FOLDER go get -u -v golang.org/x/lint/golint
      - run: sudo ldconfig
    # testing
      # check that code formatted with gofmt
      - run: .circleci/check_gofmt.sh
      # check that code doesn't have a lot of golint issues (currently removed because golint version is very different on other planforms)
      - run: GOPATH=$HOME/$GOPATH_FOLDER .circleci/check_golint.sh
      # delete file if exists
      - run: if [ -f $FILEPATH_ERROR_FLAG ]; then rm "$FILEPATH_ERROR_FLAG"; fi
      # run test in each go environment and create $FILEPATH_ERROR_FLAG file if was any error. But all tests should
      - run: cd $HOME && for version in $VERSIONS; do export GOROOT=$HOME/go_root_$version/go; export PATH=$GOROOT/bin/:$PATH; export GOPATH=$HOME/$GOPATH_FOLDER; rm -rf $HOME/$GOPATH_FOLDER/bin; rm -rf $HOME/$GOPATH_FOLDER/pkg; go test -v github.com/cossacklabs/acra/...; if [ "$?" != "0" ]; then echo "$version" >> "$FILEPATH_ERROR_FLAG"; fi done
      # if file exists (exit code of stat == 0 ) then something was wrong. cat file with versions of environments where was error and return exit 1
      - run: if [ -f  $FILEPATH_ERROR_FLAG ]; then cat "$FILEPATH_ERROR_FLAG"; rm "$FILEPATH_ERROR_FLAG"; exit 1; fi
      # each iteration pass to test different ports for forks to avoid problems with TCP TIME WAIT between tests
      - run: .circleci/integration.sh
      - run: if [ -f  $FILEPATH_ERROR_FLAG ]; then cat "$FILEPATH_ERROR_FLAG"; rm "$FILEPATH_ERROR_FLAG"; exit 1; fi
workflows:
  version: 2
  tests:
    jobs:
      - x86_64